import{S as Je,i as Ne,s as qe,k as p,w as Ge,G as Re,d as t,m as f,x as Ie,g as s,y as Oe,q as Pe,o as Ce,B as De,e as l,t as n,c as h,a as d,h as r,b as Ye,H as o}from"../chunks/index-4d2c28a6.js";import{H as Ue}from"../chunks/Header-311c21ed.js";import{M as Xe}from"../chunks/MainBlock-351f6d73.js";import"../chunks/index-af12e26e.js";import"../chunks/singletons-d1fb5791.js";function je(K){let w,y,g,m,v,i,c,E,P,S,Q,C,$,V,D,W,Z,Y,u,M,ee,te,B,oe,ae,G,ie,se,I,ne,re,O,le,J,x,he,N,A,de,q,T,pe,R,_,fe,F,me,ce,U,L,ue,X,k,we,H,ye,be;return{c(){w=l("h1"),y=n("Spider"),g=p(),m=l("p"),v=n(`A \u201CSpider\u201D is a computer program. The Spider goes to different websites, explores, finds new things, and
    makes notes. When finished, it\u2019s notes are organised in to files describing everything it has seen.`),i=p(),c=l("h1"),E=n("Word Embedding"),P=p(),S=l("p"),Q=n(`The next step is \u201CWord Embedding\u201D. A complicated topic! Word embedding creates a map, with coordinates,
    and puts each word on the map in it\u2019s own location. Artificial Intelligence research from written language
    translation websites is used. English words that have a similar meaning, are grouped in to close areas on
    the map. This is important! Similar ideas are in similar areas in the map.`),C=p(),$=l("h1"),V=n("Search"),D=p(),W=l("p"),Z=n("When you search for a word, your computer does this:"),Y=p(),u=l("ol"),M=l("li"),ee=n("Download a map of all the signs the spider found, and what kind of meaning they have"),te=p(),B=l("li"),oe=n("Look at the Word Embedding map, and find the word you searched for, remembering the location"),ae=p(),G=l("li"),ie=n(`Check every sign, and see how close it\u2019s meaning is, to the word you entered, by how far away they are
    on the map`),se=p(),I=l("li"),ne=n("Make a list, organised so the closest signs are at the top"),re=p(),O=l("li"),le=n("Download small videos and descriptions, and create the webpage, with results listed down the page"),J=p(),x=l("h1"),he=n("Privacy and Tracking"),N=p(),A=l("p"),de=n(`We use a program called Fathom to see how many people use this website, and to find out what website they
    came from if they clicked a link to come here. When you do a search, we don\u2019t find out what words you typed
    in to the search box. We might be able to guess what kind of thing you were looking at, by seeing which search
    results your computer downloaded, but we don\u2019t know exactly what you wrote. We don\u2019t send your information to
    Google or Facebook at all, but if you come here using one of their apps like Google Chrome or Facebook App, they
    might be able to track you while you use their app.`),q=p(),T=l("h1"),pe=n("Open Source and Dataset"),R=p(),_=l("p"),fe=n(`Find Sign is open source (mostly with Unlicense software license). You can get the source code at
    `),F=l("a"),me=n("GitHub"),ce=n("."),U=p(),L=l("p"),ue=n(`Find Sign indexes copyright data, so the dataset is not open source, but it is intended to be open access for
    non-commercial culturally appropriate use. For now, BitTorrent and Hypercore access has been disabled due to
    performance issues and barely any usage. Slow progress is being made refactoring the site to use simple yaml
    files to store all the interesting data. A service is planned to also offer JSON, XML, and CBOR translations
    of these YAML files. When this is finished, the data will be available over a simple http interface. For now,
    if you want access send me (@Bluebie on Github or Twitter) a message. Maybe we can sort something temporary out.`),X=p(),k=l("p"),we=n(`If you want to apply this searching technology to another sign language, you'll need to capture the data for your
    search index, by building some kind of spider program. The easiest way to make this work is to output either YAML
    or JSON in the `),H=l("a"),ye=n("search-data format"),be=n("."),this.h()},l(e){w=h(e,"H1",{});var a=d(w);y=r(a,"Spider"),a.forEach(t),g=f(e),m=h(e,"P",{});var ge=d(m);v=r(ge,`A \u201CSpider\u201D is a computer program. The Spider goes to different websites, explores, finds new things, and
    makes notes. When finished, it\u2019s notes are organised in to files describing everything it has seen.`),ge.forEach(t),i=f(e),c=h(e,"H1",{});var ve=d(c);E=r(ve,"Word Embedding"),ve.forEach(t),P=f(e),S=h(e,"P",{});var _e=d(S);Q=r(_e,`The next step is \u201CWord Embedding\u201D. A complicated topic! Word embedding creates a map, with coordinates,
    and puts each word on the map in it\u2019s own location. Artificial Intelligence research from written language
    translation websites is used. English words that have a similar meaning, are grouped in to close areas on
    the map. This is important! Similar ideas are in similar areas in the map.`),_e.forEach(t),C=f(e),$=h(e,"H1",{});var ke=d($);V=r(ke,"Search"),ke.forEach(t),D=f(e),W=h(e,"P",{});var Ee=d(W);Z=r(Ee,"When you search for a word, your computer does this:"),Ee.forEach(t),Y=f(e),u=h(e,"OL",{});var b=d(u);M=h(b,"LI",{});var Se=d(M);ee=r(Se,"Download a map of all the signs the spider found, and what kind of meaning they have"),Se.forEach(t),te=f(b),B=h(b,"LI",{});var $e=d(B);oe=r($e,"Look at the Word Embedding map, and find the word you searched for, remembering the location"),$e.forEach(t),ae=f(b),G=h(b,"LI",{});var We=d(G);ie=r(We,`Check every sign, and see how close it\u2019s meaning is, to the word you entered, by how far away they are
    on the map`),We.forEach(t),se=f(b),I=h(b,"LI",{});var xe=d(I);ne=r(xe,"Make a list, organised so the closest signs are at the top"),xe.forEach(t),re=f(b),O=h(b,"LI",{});var Ae=d(O);le=r(Ae,"Download small videos and descriptions, and create the webpage, with results listed down the page"),Ae.forEach(t),b.forEach(t),J=f(e),x=h(e,"H1",{});var Te=d(x);he=r(Te,"Privacy and Tracking"),Te.forEach(t),N=f(e),A=h(e,"P",{});var Fe=d(A);de=r(Fe,`We use a program called Fathom to see how many people use this website, and to find out what website they
    came from if they clicked a link to come here. When you do a search, we don\u2019t find out what words you typed
    in to the search box. We might be able to guess what kind of thing you were looking at, by seeing which search
    results your computer downloaded, but we don\u2019t know exactly what you wrote. We don\u2019t send your information to
    Google or Facebook at all, but if you come here using one of their apps like Google Chrome or Facebook App, they
    might be able to track you while you use their app.`),Fe.forEach(t),q=f(e),T=h(e,"H1",{});var Le=d(T);pe=r(Le,"Open Source and Dataset"),Le.forEach(t),R=f(e),_=h(e,"P",{});var j=d(_);fe=r(j,`Find Sign is open source (mostly with Unlicense software license). You can get the source code at
    `),F=h(j,"A",{href:!0});var He=d(F);me=r(He,"GitHub"),He.forEach(t),ce=r(j,"."),j.forEach(t),U=f(e),L=h(e,"P",{});var Me=d(L);ue=r(Me,`Find Sign indexes copyright data, so the dataset is not open source, but it is intended to be open access for
    non-commercial culturally appropriate use. For now, BitTorrent and Hypercore access has been disabled due to
    performance issues and barely any usage. Slow progress is being made refactoring the site to use simple yaml
    files to store all the interesting data. A service is planned to also offer JSON, XML, and CBOR translations
    of these YAML files. When this is finished, the data will be available over a simple http interface. For now,
    if you want access send me (@Bluebie on Github or Twitter) a message. Maybe we can sort something temporary out.`),Me.forEach(t),X=f(e),k=h(e,"P",{});var z=d(k);we=r(z,`If you want to apply this searching technology to another sign language, you'll need to capture the data for your
    search index, by building some kind of spider program. The easiest way to make this work is to output either YAML
    or JSON in the `),H=h(z,"A",{href:!0});var Be=d(H);ye=r(Be,"search-data format"),Be.forEach(t),be=r(z,"."),z.forEach(t),this.h()},h(){Ye(F,"href","https://github.com/Bluebie/sign-search"),Ye(H,"href","https://github.com/Bluebie/sign-search/blob/master/docs/search-data.md")},m(e,a){s(e,w,a),o(w,y),s(e,g,a),s(e,m,a),o(m,v),s(e,i,a),s(e,c,a),o(c,E),s(e,P,a),s(e,S,a),o(S,Q),s(e,C,a),s(e,$,a),o($,V),s(e,D,a),s(e,W,a),o(W,Z),s(e,Y,a),s(e,u,a),o(u,M),o(M,ee),o(u,te),o(u,B),o(B,oe),o(u,ae),o(u,G),o(G,ie),o(u,se),o(u,I),o(I,ne),o(u,re),o(u,O),o(O,le),s(e,J,a),s(e,x,a),o(x,he),s(e,N,a),s(e,A,a),o(A,de),s(e,q,a),s(e,T,a),o(T,pe),s(e,R,a),s(e,_,a),o(_,fe),o(_,F),o(F,me),o(_,ce),s(e,U,a),s(e,L,a),o(L,ue),s(e,X,a),s(e,k,a),o(k,we),o(k,H),o(H,ye),o(k,be)},d(e){e&&t(w),e&&t(g),e&&t(m),e&&t(i),e&&t(c),e&&t(P),e&&t(S),e&&t(C),e&&t($),e&&t(D),e&&t(W),e&&t(Y),e&&t(u),e&&t(J),e&&t(x),e&&t(N),e&&t(A),e&&t(q),e&&t(T),e&&t(R),e&&t(_),e&&t(U),e&&t(L),e&&t(X),e&&t(k)}}}function ze(K){let w,y,g,m,v;return y=new Ue({}),m=new Xe({props:{wide:!0,$$slots:{default:[je]},$$scope:{ctx:K}}}),{c(){w=p(),Ge(y.$$.fragment),g=p(),Ge(m.$$.fragment),this.h()},l(i){Re('[data-svelte="svelte-tor3fv"]',document.head).forEach(t),w=f(i),Ie(y.$$.fragment,i),g=f(i),Ie(m.$$.fragment,i),this.h()},h(){document.title="Find Sign Technology"},m(i,c){s(i,w,c),Oe(y,i,c),s(i,g,c),Oe(m,i,c),v=!0},p(i,[c]){const E={};c&1&&(E.$$scope={dirty:c,ctx:i}),m.$set(E)},i(i){v||(Pe(y.$$.fragment,i),Pe(m.$$.fragment,i),v=!0)},o(i){Ce(y.$$.fragment,i),Ce(m.$$.fragment,i),v=!1},d(i){i&&t(w),De(y,i),i&&t(g),De(m,i)}}}const tt=!0;class ot extends Je{constructor(w){super(),Ne(this,w,null,ze,qe,{})}}export{ot as default,tt as prerender};
